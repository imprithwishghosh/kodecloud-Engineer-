The Nautilus DevOps team has some data on each app server in Stratos DC that they want to copy to a different location. However, they want to create an archive of the data first, then they want to copy the same to a different location on the respective app server. Additionally, there are some specific requirements for each server. Perform the task using Ansible playbook as per requirements mentioned below:



Create a playbook named playbook.yml under /home/thor/ansible directory on jump host, an inventory file is already placed under /home/thor/ansible/ directory on Jump Server itself.


Create an archive ecommerce.tar.gz (make sure archive format is tar.gz) of /usr/src/devops/ directory ( present on each app server ) and copy it to /opt/devops/ directory on all app servers. The user and group owner of archive ecommerce.tar.gz should be tony for App Server 1, steve for App Server 2 and banner for App Server 3.



solution ::

inventory file 
----

[app_servers]
stapp01 ansible_host=172.16.238.10 ansible_ssh_pass=Ir0nM@n ansible_user=tony
stapp02 ansible_host=172.16.238.11 ansible_ssh_pass=Am3ric@ ansible_user=steve
stapp03 ansible_host=172.16.238.12 ansible_ssh_pass=BigGr33n ansible_user=banner


cat owner_map.yml 
----
owner_map:
  stapp01: tony
  stapp02: steve
  stapp03: banner


cat playbook.yml 
---
- hosts: app_servers
  become: yes
  tasks:
    - name: Create archive of /usr/src/devops/ directory
      archive:
        path: /usr/src/devops/
        dest: /tmp/ecommerce.tar.gz
        format: gz
        owner: "{{ archive_owner }}"
        group: "{{ archive_owner }}"
      tags: create_archive

    - name: Copy archive to /opt/devops/ directory
      copy:
        src: /tmp/ecommerce.tar.gz
        dest: /opt/devops/ecommerce.tar.gz
        owner: "{{ archive_owner }}"
        group: "{{ archive_owner }}"
        remote_src: yes
      tags: copy_archive

    - name: Clean up temporary archive
      file:
        path: /tmp/ecommerce.tar.gz
        state: absent
      tags: cleanup

  vars:
    archive_owner: "{{ owner_map[inventory_hostname] }}"

  vars_files:
    - "/home/thor/ansible/owner_map.yml"




